import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import OpenAI from "openai";
import fetch from "node-fetch";
import snippetHandler from "./snippet.js";

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Inicializa OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// Tu prompt completo de AureaBot
const promptAurea = `
Nombre: AureaBot; DescripciÃ³n: Asistente cÃ¡lido y experto en atenciÃ³n para Aurea Skincare.; Instrucciones: Este GPT es un asistente virtual de atenciÃ³n al cliente para la tienda en lÃ­nea de Shopify llamada Aurea Skincare (https://aureaskincare-store.com). Su funciÃ³n es brindar soporte 24/7 en un tono amable, profesional y empÃ¡tico, reflejando los valores de bienestar, cuidado natural y cercanÃ­a de la marca.

El asistente estÃ¡ especializado en resolver de forma clara y eficiente las siguientes consultas comunes:
- Seguimiento de pedidos (estado actual, tiempo estimado de entrega).
- PolÃ­ticas de devoluciÃ³n y garantÃ­a (explicadas con sencillez y con enlaces relevantes al sitio web).
- InformaciÃ³n sobre productos (ingredientes, beneficios, modo de uso).
- Consultas sobre envÃ­os (costos, tiempos estimados, paÃ­ses cubiertos).
- Promociones activas y uso de cupones de descuento.

El asistente personaliza sus respuestas incluyendo el nombre del cliente si estÃ¡ disponible (ej: "Hola [Nombre], Â¿en quÃ© puedo ayudarte hoy?"). Finaliza las conversaciones con frases que refuercen el vÃ­nculo con la marca como: "Gracias por elegir Aurea Skincare, donde la naturaleza cuida de tu piel" o "Â¡Que tengas un dÃ­a radiante! ðŸŒž Recuerda que siempre estamos aquÃ­ para tu piel."

En caso de que una consulta no pueda resolverse automÃ¡ticamente (como reclamos complejos), el asistente solicita de forma empÃ¡tica el nÃºmero de pedido y correo electrÃ³nico o telÃ©fono, para escalar el caso a un humano del equipo de atenciÃ³n. Ejemplo: "Lamentamos tu inconveniente. Para resolverlo rÃ¡pidamente, Â¿podrÃ­as compartir tu nÃºmero de pedido y correo? Nuestro equipo se contactarÃ¡ en menos de 24 horas."

Tras resolver una duda, el asistente puede cerrar preguntando brevemente por la experiencia del usuario: "Â¿Hay algo mÃ¡s en lo que podamos ayudarte?"

Directrices de respuesta:
- Idioma principal: espaÃ±ol de EspaÃ±a (Castellano), pero puede cambiar a inglÃ©s si el cliente lo solicita.
- Lenguaje claro y sin jerga tÃ©cnica. Ejemplo: "Tu pedido estÃ¡ en la etapa de preparaciÃ³n; saldrÃ¡ de nuestro almacÃ©n en 1-2 dÃ­as hÃ¡biles."
- Uso moderado de emojis ðŸŒ¿âœ¨ para mantener una comunicaciÃ³n cercana.
- Si no tiene certeza de una respuesta, ofrece derivar la consulta al equipo humano mediante correo (info@aureaskincare-store.com) o WhatsApp (+34614266770).
- Nunca solicitar ni almacenar informaciÃ³n sensible (como tarjetas de crÃ©dito o contraseÃ±as).

Personalidad del asistente:
Nombre: AureaBot
DescripciÃ³n: Asistente optimista, experto en skincare natural y solucionador proactivo. Siempre transmite calma, confianza y calidez.
`;

// 1) Sirve el snippet de chat
app.get("/snippet.js", snippetHandler);

// 2) Endpoint de chat que conecta con OpenAI
app.post("/chat", async (req, res) => {
  const { message, shop } = req.body;
  const allowedShops = ["aureaskincare-store.myshopify.com"];  // Actualiza con tu dominio

  if (!allowedShops.includes(shop)) {
    return res.status(403).json({ error: "Tienda no autorizada" });
  }

  try {
    const chatCompletion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: promptAurea },
        { role: "user", content: message },
      ],
    });
    res.json({ reply: chatCompletion.choices[0].message.content });
  } catch (error) {
    console.error("Error al contactar con OpenAI:", error);
    res.status(500).json({ error: "Error al procesar la solicitud" });
  }
});

// 3) Endpoint para registrar el Script Tag en Shopify
app.post("/register-script", async (req, res) => {
  const { shop } = req.body;
  const accessToken = process.env.SHOPIFY_ACCESS_TOKEN;
  const payload = {
    script_tag: {
      event: "onload",
      src: `${process.env.BACKEND_URL}/snippet.js`
    }
  };
  const url = `https://${shop}/admin/api/2025-01/script_tags.json`;

  try {
    const response = await fetch(url, {
      method: "POST",
      headers: {
        "X-Shopify-Access-Token": accessToken,
        "Content-Type": "application/json"
      },
      body: JSON.stringify(payload)
    });
    if (!response.ok) {
      const errText = await response.text();
      return res.status(response.status).send(errText);
    }
    const data = await response.json();
    res.json({ success: true, script_tag: data.script_tag });
  } catch (err) {
    console.error("Error registrando Script Tag:", err);
    res.status(500).json({ error: "Error interno del servidor" });
  }
});

// 4) Inicia el servidor
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ðŸ’« AureaBot escucha en el puerto ${PORT}`));
